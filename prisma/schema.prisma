// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int            @id @default(autoincrement())
  email     String         @unique
  name      String
  password  String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  posts          Post[]
  refreshTokens  RefreshToken[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model RefreshToken {
  token     String   @id @unique
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

//*Thí dụ muốn cập nhật schema và muốn trường đó trên db cũng mất luôn thì chạy(nghĩa là apply vào db):
//npx prisma db push
//*Câu lệnh trên khác với npx prisma migrate dev ở chỗ sẽ tạo thêm folder migrate và reset dữ liệu
//*Câu lệnh: npx prisma generate
//Tạo ra type cho prisma client (hay còn gọi là artifacts)

//*Cách tránh migrate:
//Thêm một schema vào User thì mặc định thằng đó là require bắt buộc có dữ liệu
//--> mình sẽ cho nó một cái default value để không lỗi sau đó 
//chạy lệnh npx prisma generate để cho nó đồng nhất